 let currentLevel = 1;
        const totalLevels = 4;

        function updateProgress() {
            const progress = (currentLevel / totalLevels) * 100;
            document.getElementById('progress').style.width = progress + '%';
        }

        function showLevel(level) {
            document.querySelectorAll('.challenge').forEach(challenge => {
                challenge.classList.remove('active');
            });
            document.getElementById(`challenge-${level}`).classList.add('active');
        }

        function createConfetti() {
            const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3'];
            for (let i = 0; i < 50; i++) {
                const confetti = document.createElement('div');
                confetti.className = 'confetti';
                confetti.style.background = colors[Math.floor(Math.random() * colors.length)];
                confetti.style.left = Math.random() * 100 + 'vw';
                confetti.style.animationDelay = Math.random() * 5 + 's';
                document.body.appendChild(confetti);
                
                setTimeout(() => confetti.remove(), 5000);
            }
        }

        function checkHTML() {
            const input = document.getElementById('html-input').value.toLowerCase();
            const feedback = document.getElementById('html-feedback');
            
            if (input.includes('<h1>') && input.includes('</h1>') && 
                (input.includes('<p>') || input.includes('<div>'))) {
                feedback.className = 'feedback success';
                feedback.innerHTML = '‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢—ã —Å–æ–∑–¥–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É HTML!';
                setTimeout(() => {
                    currentLevel = 2;
                    showLevel(2);
                    updateProgress();
                }, 1500);
            } else {
                feedback.className = 'feedback error';
                feedback.innerHTML = '‚ùå –ü–æ—á—Ç–∏! –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Ç–µ–≥–∏ h1 –∏ p/div';
            }
        }

        function checkCSS() {
            const select = document.getElementById('css-select');
            const feedback = document.getElementById('css-feedback');
            
            if (select.value === "color: blue; text-align: center;") {
                feedback.className = 'feedback success';
                feedback.innerHTML = 'üé® –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞–ª–∞ –≤—ã–≥–ª—è–¥–µ—Ç—å –Ω–∞–º–Ω–æ–≥–æ –ª—É—á—à–µ!';
                setTimeout(() => {
                    currentLevel = 3;
                    showLevel(3);
                    updateProgress();
                }, 1500);
            } else {
                feedback.className = 'feedback error';
                feedback.innerHTML = 'üé® –ù–µ —Å–æ–≤—Å–µ–º... –ü–æ–ø—Ä–æ–±—É–π —Å–¥–µ–ª–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∏–Ω–∏–º –∏ –≤—ã—Ä–æ–≤–Ω—è—Ç—å –ø–æ —Ü–µ–Ω—Ç—Ä—É';
            }
        }

        function checkJS() {
            const input = document.getElementById('js-input').value.toLowerCase();
            const feedback = document.getElementById('js-feedback');
            
            if (input.includes('alert') || input.includes('–∏–∑–º–µ–Ω–∏—Ç—å') || input.includes('change')) {
                feedback.className = 'feedback success';
                feedback.innerHTML = '‚ö° –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ! JavaScript –æ–∂–∏–≤–∏–ª —Ç–≤–æ—é —Å—Ç—Ä–∞–Ω–∏—Ü—É!';
                setTimeout(() => {
                    currentLevel = 4;
                    showLevel(4);
                    updateProgress();
                }, 1500);
            } else {
                feedback.className = 'feedback error';
                feedback.innerHTML = '‚ö° –ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∏–¥–µ—è, –Ω–æ –ø–æ–ø—Ä–æ–±—É–π –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã';
            }
        }

        function checkCombined() {
            const feedback = document.getElementById('combined-feedback');
            
            feedback.className = 'feedback success';
            feedback.innerHTML = 'üîó –ò–¥–µ–∞–ª—å–Ω–æ! –¢—ã —Å–æ–∑–¥–∞–ª –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç!';
            
            setTimeout(() => {
                document.getElementById('completion').style.display = 'block';
                document.querySelectorAll('.challenge').forEach(challenge => {
                    challenge.style.display = 'none';
                });
                createConfetti();
            }, 2000);
        }

        function showHint(level) {
            const feedback = document.getElementById('combined-feedback');
            feedback.className = 'feedback success';
            feedback.innerHTML = 'üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω—è—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é count –∏ –æ–±–Ω–æ–≤–ª—è—é—Ç —Ç–µ–∫—Å—Ç –≤ span';
        }

        function restartQuest() {
            currentLevel = 1;
            updateProgress();
            showLevel(1);
            document.getElementById('completion').style.display = 'none';
            
            // –°–±—Ä–æ—Å –≤—Å–µ—Ö –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
            document.getElementById('html-input').value = '';
            document.getElementById('css-select').selectedIndex = 0;
            document.getElementById('js-input').value = '';
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        updateProgress();
