   // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        let currentLevel = 1;
        const totalLevels = 4;

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è Enter
        function handleEnter(event, checkFunction) {
            if (event.key === 'Enter') {
                checkFunction();
            }
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
        function updateProgress() {
            const progress = ((currentLevel - 1) / totalLevels) * 100;
            document.getElementById('progress').style.width = progress + '%';
        }

        // –ü–æ–∫–∞–∑–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å
        function showLevel(level) {
            document.querySelectorAll('.challenge').forEach(challenge => {
                challenge.classList.remove('active');
            });
            const challengeElement = document.getElementById(`challenge-${level}`);
            if (challengeElement) {
                challengeElement.classList.add('active');
            }
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ HTML
        function checkHTML() {
            const input = document.getElementById('html-input');
            const feedback = document.getElementById('html-feedback');
            
            if (!input) {
                console.error('HTML input not found');
                return;
            }
            
            const value = input.value.toLowerCase();
            
            if (value.includes('<h1>') && value.includes('</h1>') && 
                (value.includes('<p>') || value.includes('<div>'))) {
                feedback.className = 'feedback success';
                feedback.innerHTML = '‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢—ã —Å–æ–∑–¥–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É HTML!';
                setTimeout(() => {
                    currentLevel = 2;
                    showLevel(2);
                    updateProgress();
                }, 1500);
            } else {
                feedback.className = 'feedback error';
                feedback.innerHTML = '‚ùå –ü–æ—á—Ç–∏! –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Ç–µ–≥–∏ h1 –∏ p/div. –ü—Ä–∏–º–µ—Ä: &lt;h1&gt;–ó–∞–≥–æ–ª–æ–≤–æ–∫&lt;/h1&gt;&lt;p&gt;–¢–µ–∫—Å—Ç&lt;/p&gt;';
            }
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS
        function checkCSS() {
            const select = document.getElementById('css-select');
            const feedback = document.getElementById('css-feedback');
            
            if (!select) {
                console.error('CSS select not found');
                return;
            }
            
            if (select.value === "color: blue; text-align: center;") {
                feedback.className = 'feedback success';
                feedback.innerHTML = 'üé® –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞–ª–∞ –≤—ã–≥–ª—è–¥–µ—Ç—å –Ω–∞–º–Ω–æ–≥–æ –ª—É—á—à–µ!';
                setTimeout(() => {
                    currentLevel = 3;
                    showLevel(3);
                    updateProgress();
                }, 1500);
            } else {
                feedback.className = 'feedback error';
                feedback.innerHTML = 'üé® –ù–µ —Å–æ–≤—Å–µ–º... –ü–æ–ø—Ä–æ–±—É–π —Å–¥–µ–ª–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∏–Ω–∏–º –∏ –≤—ã—Ä–æ–≤–Ω—è—Ç—å –ø–æ —Ü–µ–Ω—Ç—Ä—É';
            }
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ JavaScript
        function checkJS() {
            const input = document.getElementById('js-input');
            const feedback = document.getElementById('js-feedback');
            
            if (!input) {
                console.error('JS input not found');
                return;
            }
            
            const value = input.value.toLowerCase();
            
            if (value.includes('alert') || value.includes('–∏–∑–º–µ–Ω–∏—Ç—å') || value.includes('change') || 
                value.includes('console.log') || value.includes('document')) {
                feedback.className = 'feedback success';
                feedback.innerHTML = '‚ö° –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ! JavaScript –æ–∂–∏–≤–∏–ª —Ç–≤–æ—é —Å—Ç—Ä–∞–Ω–∏—Ü—É!';
                setTimeout(() => {
                    currentLevel = 4;
                    showLevel(4);
                    updateProgress();
                }, 1500);
            } else {
                feedback.className = 'feedback error';
                feedback.innerHTML = '‚ö° –ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∏–¥–µ—è, –Ω–æ –ø–æ–ø—Ä–æ–±—É–π –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ü—Ä–∏–º–µ—Ä: alert("–ü—Ä–∏–≤–µ—Ç!")';
            }
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
        function checkCombined() {
            const feedback = document.getElementById('combined-feedback');
            
            feedback.className = 'feedback success';
            feedback.innerHTML = 'üîó –ò–¥–µ–∞–ª—å–Ω–æ! –¢—ã —Å–æ–∑–¥–∞–ª –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç!';
            
            setTimeout(() => {
                document.getElementById('completion').style.display = 'block';
                document.querySelectorAll('.challenge').forEach(challenge => {
                    challenge.style.display = 'none';
                });
            }, 2000);
        }

        // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É
        function showHint(level) {
            const feedback = document.getElementById('combined-feedback');
            feedback.className = 'feedback success';
            feedback.innerHTML = 'üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω—è—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é count –∏ –æ–±–Ω–æ–≤–ª—è—é—Ç —Ç–µ–∫—Å—Ç –≤ span. –ü—Ä–∏–º–µ—Ä: document.getElementById("increase").addEventListener("click", function() { count++; document.getElementById("count").textContent = count; })';
        }

        // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–≤–µ—Å—Ç–∞
        function restartQuest() {
            currentLevel = 1;
            updateProgress();
            showLevel(1);
            document.getElementById('completion').style.display = 'none';
            
            // –°–±—Ä–æ—Å –≤—Å–µ—Ö –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
            const htmlInput = document.getElementById('html-input');
            const cssSelect = document.getElementById('css-select');
            const jsInput = document.getElementById('js-input');
            
            if (htmlInput) htmlInput.value = '';
            if (cssSelect) cssSelect.selectedIndex = 0;
            if (jsInput) jsInput.value = '';
            
            // –°–±—Ä–æ—Å —Ñ–∏–¥–±–µ–∫–∞
            document.querySelectorAll('.feedback').forEach(feedback => {
                feedback.style.display = 'none';
            });
            
            // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤—ã–∑–æ–≤—ã
            document.querySelectorAll('.challenge').forEach(challenge => {
                challenge.style.display = 'block';
            });
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('DOMContentLoaded', function() {
            updateProgress();
            console.log('–ö–≤–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
        });
